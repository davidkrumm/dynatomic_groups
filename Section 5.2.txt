/* 
This file contains the code used for calculations in Section 5.2. This includes:
 - Proof of Proposition 5.3(a) (starting on line 7),
 - Proof of Proposition 5.3(b) (line 48).
*/

//// *** Proof of Proposition 5.3(a) *** ////

_<x> := PolynomialRing(Rationals());
v := 3;
Phi3v := x^6 - 2*v*x^5 + (v^2 + 3*v)*x^4 + (-3*v^2 - v)*x^3 + 4*v^2*x^2 - 3*v^2*x + v^2;
G3v := GaloisGroup(Phi3v);

S6 := Sym(6);
pi := S6 ! [{@ 1,2,3 @}, {@ 4,5,6 @}];
sigma := S6 ! [{@ 1,2,3 @},{@ 4,6,5 @}];
W := Centralizer(S6, pi);
C := sub<S6|[S6![{@ 1,6 @},{@ 2,4 @},{@ 3,5 @}],sigma]>;

possible_groups := {W,C,G3v};

/*
Given the Galois group of a polynomial F with rational coefficients,
this function computes the density of the set of primes p such that 
F has a root in the p-adic field Q_p.
*/

Density := function(GG);
stabilizer_union := {};
for i := 1 to #GSet(GG) do
stabilizer_union := stabilizer_union join ElementSet(GG, Stabilizer(GG, i));
end for;
return #stabilizer_union/#GG;
end function;

{Density(GG): GG in possible_groups};


/*

Output:

{ 1/6, 5/18 }

*/


//// *** Proof of Proposition 5.3(b) *** ////

// Note: lines 16-183 and 593-621 from the code for Section 4.2 must be run before this.

possible_groups := Realized join UnknownGroups; // The set \mathcal{P} in the paper
assert #possible_groups eq 26;

/*
Given the Galois group of a polynomial F with rational coefficients,
this function computes the density of the set of primes p such that 
F has a root in the p-adic field Q_p.
*/

Density := function(GG);
stabilizer_union := {};
for i := 1 to #GSet(GG) do
stabilizer_union := stabilizer_union join ElementSet(GG, Stabilizer(GG, i));
end for;
return #stabilizer_union/#GG;
end function;


possible_densities := {Density(GG): GG in possible_groups};

possible_densities;
Maximum(possible_densities);

/*

Output:

{ 1/6, 19/96, 85/384, 43/192, 1/4, 5/16, 1/3, 11/32, 25/64, 19/48, 13/32, 
53/128, 1/2, 17/32, 39/64, 5/8 }

5/8

*/

//// Densities for the groups known to be realized.

realizable_densities := {Density(GG): GG in Realized};
realizable_densities;
Maximum(realizable_densities);

/*

Output:

{ 1/6, 19/96, 85/384, 43/192, 11/32, 25/64, 19/48, 53/128, 17/32, 39/64 }


39/64

*/
