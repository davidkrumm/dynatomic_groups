
/* 
This file contains the code used for the calculations related to
the fourth dynatomic groups of maps with trivial automorphism group.
In particular, this includes code for Lemmas 4.3, 4.4, and 4.5,
as well as Propositions 4.6, 5.1(b), and 5.3(b).
*/


//// Computing the Galois group of Phi_4 and its lattice of subgroups.

F<t> := PolynomialRing(Rationals());
_<x> := PolynomialRing(F);

Phi4 := x^12 + (-3*t + 6)*x^11 + (4*t^2 - 16*t + 24)*x^10 + (-3*t^3 + 20*t^2 - 55*t +
    62)*x^9 + (t^4 - 21*t^3 + 19*t^2 - 222*t + 72)*x^8 + (11*t^4 - 35*t^3 -
    14*t^2 - 660*t + 72)*x^7 + (54*t^4 + 142*t^3 + 413*t^2 - 684*t + 852)*x^6 +
    (153*t^4 + 825*t^3 + 2422*t^2 + 1596*t + 3672)*x^5 + (272*t^4 + 1881*t^3 +
    5854*t^2 + 6300*t + 7560)*x^4 + (309*t^4 + 2409*t^3 + 7754*t^2 + 9228*t +
    8744)*x^3 + (218*t^4 + 1806*t^3 + 5884*t^2 + 7080*t + 5808)*x^2 + (87*t^4 +
    740*t^3 + 2400*t^2 + 2800*t + 2064)*x + 15*t^4 + 128*t^3 + 408*t^2 + 448*t +
    304;

// Discriminant(Phi4) eq 5184*(t + 6)^44*(t^2 + t + 5/4)^3*(t^2 + 22/3*t + 17)^4;

G,_,S := GaloisGroup(Phi4);

Gsubs := SubgroupLattice(G); // The poset of conjugacy classes of subgroups of G


//// Checking that G is isomorphic to the appropriate wreath product.

W := WreathProduct(CyclicGroup(4),Sym(3));
IsConjugate(Sym(12),G,W);


/*
The following function determines whether the given 
permutation group H has an element with cycle structure s.
*/

HasCycleStructure := function(H, s)
for h in H do
if CycleStructure(h) eq s then
return true;
end if;
end for;
return false;
end function;

//// Given a subgroup H of G, this function returns the curve Y_H.

Y := function(H)
qH := GaloisSubgroup(S, H);
AA := AffineSpace(Rationals(),2);
f := Evaluate(Polynomial([Evaluate(c, AA.1) : c in Coefficients(qH)]), AA.2);
return Curve(AA, f);
end function;


//// Labeling the maximal subgroups of G.

for i in MaximalSubgroups(Gsubs ! G) do
m := Group(i);
if IdentifyGroup(m) eq <192,944> then
M1 := m;
elif Order(m) eq 128 then
M2 := m;
elif Order(m) eq 96 then
M3 := m;
elif IdentifyGroup(m) eq <192,188> then
M4 := m;
elif IdentifyGroup(m) eq <192,182> then
M5 := m;
end if;
end for;


//// Labeling the Maximal subgroups of M1.

for i in MaximalSubgroups(Gsubs ! M1) do
m := Group(i);
if Order(m) eq 48 then
A1 := m;
elif
Order(m) eq 64 then
A2 := m;
elif IdentifyGroup(m) eq <96,68> then
A3 := m;
elif IdentifyGroup(m) eq <96,64> and HasCycleStructure(m,[<2,6>]) then
A4 := m;
elif IdentifyGroup(m) eq <96,64> and not HasCycleStructure(m,[<2,6>]) then
A5 := m;
end if;
end for;


//// Labeling the maximal subgroups of M2.

for i in MaximalSubgroups(Gsubs ! M2) do
m := Group(i);
if IdentifyGroup(m) eq <64,101> and not HasCycleStructure(m,[<8,1>,<4,1>]) then
B1 := m; 
elif IdentifyGroup(m) eq <64,198> then
B2 := m;
elif IdentifyGroup(m) eq <64,85> then
B3 := m;
elif IdentifyGroup(m) eq <64,20> and not HasCycleStructure(m,[<8,1>,<4,1>]) then
B4 := m;
elif IdentifyGroup(m) eq <64,55> then
B5 := m;
elif IdentifyGroup(m) eq <64,20> and HasCycleStructure(m,[<8,1>,<4,1>]) then
B6 := m;
elif IdentifyGroup(m) eq <64,101> and HasCycleStructure(m,[<8,1>,<4,1>]) then
B7 := m;
end if;
end for;


//// Labeling two maximal subgroups of M3.

for i in MaximalSubgroups(Gsubs ! M3) do
m := Group(i);
if Order(m) eq 24 then
i;
C1 := m;
elif Order(m) eq 32 then
i;
C2 := m;
end if;
end for;


//// Labeling one maximal subgroup of B1.

for i in MaximalSubgroups(Gsubs ! B1) do
m := Group(i);
if IdentifyGroup(m) eq <32,11> and not HasCycleStructure(m,[<8,1>,<2,2>]) and not HasCycleStructure(m,[<2,6>]) then
i;
J := m; 
end if;
end for;


//// Labeling one maximal subgroup of B2.

for i in MaximalSubgroups(Gsubs ! B2) do
m := Group(i);
if IdentifyGroup(m) eq <32, 25> and HasCycleStructure(m,[<4, 1>, <2, 2>, <1, 4>]) and HasCycleStructure(m,[<4, 1>, <1, 8>]) then
i;
K := m;
end if;
end for;


//// Computing rational roots of discriminants.

LabeledSubgroups := {M1,M2,M3,M4,M5,A1,A2,A3,A4,A5,B1,B2,B3,B4,B5,B6,B7,J,K};

LabeledPolynomials := {GaloisSubgroup(S,H) : H in LabeledSubgroups} join {Phi4};

Discriminants := {};

for poly in LabeledPolynomials do
Discriminants := Discriminants join {d[1] : d in Roots(Discriminant(poly))};
end for;

Discriminants;

/*

Output:

{ -19/3, -6, -5, -1, -1/2 }

*/


//// The set denoted \mathcal{F} in the paper.
RuledOut := {M4,M5,A2,A3,A4,A5,B3,B4,B6,B7,J};

//// The set denoted \mathcal{R} in the paper.
Realized := {W,M1,M2,M3,A1,B1,B2,C1,C2,K};



//// *** What follows is the proof of Lemma 4.3 in the paper. *** ////


// This function attempts to realize a given group H in the form G_{4,r}.

RealizeGroup := function(H, height_bound)
test_values := {@ p[1] : p in PointSearch(Y(H),height_bound) @};
realizations := {};

_<x> := PolynomialRing(Rationals());

for r in test_values do
Phi4r := x^12 + (-3*r + 6)*x^11 + (4*r^2 - 16*r + 24)*x^10 + (-3*r^3 + 20*r^2 - 55*r +
    62)*x^9 + (r^4 - 21*r^3 + 19*r^2 - 222*r + 72)*x^8 + (11*r^4 - 35*r^3 -
    14*r^2 - 660*r + 72)*x^7 + (54*r^4 + 142*r^3 + 413*r^2 - 684*r + 852)*x^6 +
    (153*r^4 + 825*r^3 + 2422*r^2 + 1596*r + 3672)*x^5 + (272*r^4 + 1881*r^3 +
    5854*r^2 + 6300*r + 7560)*x^4 + (309*r^4 + 2409*r^3 + 7754*r^2 + 9228*r +
    8744)*x^3 + (218*r^4 + 1806*r^3 + 5884*r^2 + 7080*r + 5808)*x^2 + (87*r^4 +
    740*r^3 + 2400*r^2 + 2800*r + 2064)*x + 15*r^4 + 128*r^3 + 408*r^2 + 448*r +
    304;
G4r := GaloisGroup(Phi4r);

if IsConjugate(Sym(12),G4r,H) then
Include(~realizations, r);
end if;
end for;
return realizations;
end function;

for H in [M1,M2,M3,A1,B1,B2,C1,K] do
RealizeGroup(H,100);
end for;

RealizeGroup(C2,10^4);

/*

Output:

{ -5/4, 1/4 }
{ -19/3, -5, -14/13, 30/31 }
{ 3/2 }
{ -11/6 }
{ -35/6 }
{ -15/7 }
{ -1 }
{ -10/3 }
{ -1/21 }

*/



//// *** Proof of Lemma 4.4 in the paper. *** ////


//// The curve Y_M4 is birational to a conic with no rational point.

YM4 := Y(M4);
conic, M4map := Conic(ProjectiveClosure(YM4));
conic;
BasePoints(M4map);
HasRationalPoint(conic);

/*

Output:

Conic over Rational Field defined by
$.1^2 + 27*$.2^2 + 198*$.2*$.3 + 459*$.3^2

{@ (-19/3 : 0 : 1), (-6 : 0 : 1), (0 : 1 : 0) @}

false

*/

//// Hence (-19/3,0) and (-6,0) are the only rational points on Y_M4.



//// The curve Y_A5 is birational to a conic with no rational point.

YA5 := Y(A5);
conic, A5map := Conic(ProjectiveClosure(YA5));
conic;
BasePoints(A5map);
HasRationalPoint(conic);

/*

Output:

Conic over Rational Field defined by $.1^2 + 4*$.2^2 + 4*$.3^2

{@ (-6 : 0 : 1), (0 : 1 : 0) @}

false

*/

//// Hence (-6,0) is the only rational point on Y_A5.


//// The curve Y_J is birational to a conic with no rational point.

YJ := Y(J);
conic, Jmap := Conic(ProjectiveClosure(YJ));
conic;
BasePoints(Jmap);
HasRationalPoint(conic);

/*

Output:

Conic over Rational Field defined by
$.1^2 - 71/6*$.1*$.2 + 439/12*$.2^2 - 71/6*$.1*$.3 + 821/12*$.2*$.3 + 437/12*$.3^2

{@ (-6 : 2 : 1), (-1 : 1 : 0), (1 : 0 : 0) @}

false

*/


//// Hence (-6,2) is the only rational point on Y_J.


//// The curve Y_M5 is elliptic of rank 0 over a quadratic field.

YM5 := Y(M5);
QF<i> := QuadraticField(-1);
YM5 := ChangeRing(YM5, QF);
XM5 := ProjectiveClosure(YM5);
E, M5map := EllipticCurve(XM5, XM5 ! [i - 1/2,0,1]);
Rank(E);

/*

Output:

0 true

*/


//// Finding all Q(i)-rational points on Y_M5.

XM5_pts := BasePoints(M5map);
T, Tmap := TorsionSubgroup(E);
Epts := [Tmap(y): y in T];
for pt in Epts do
XM5_pts := XM5_pts join Points(Pullback(M5map, pt));
end for;
XM5_pts;

/*

Output:

{@ (-19/3 : 0 : 1), (-6 : 0 : 1), (1/2*(-2*i - 1) : 0 : 1), (0 : 1 : 0), 
(1/2*(2*i - 1) : 0 : 1) @}

*/


//// Hence every rational point on Y_M5 has t-coordinate -6 or -19/3.


//// The curve Y_B6 is elliptic of rank 0 over a quadratic field.

YB6 := Y(B6);
QF<i> := QuadraticField(-1);
YB6 := ChangeRing(YB6, QF);
XB6 := ProjectiveClosure(YB6);
E, B6map := EllipticCurve(XB6, XB6 ! [i - 1/2,0,1]);
Rank(E);

/*

Output:

0 true

*/


//// Finding all Q(i)-rational points on Y_B6.

XB6_pts := BasePoints(B6map);
T, Tmap := TorsionSubgroup(E);
Epts := [Tmap(y): y in T];
for pt in Epts do
XB6_pts := XB6_pts join Points(Pullback(B6map, pt));
end for;
XB6_pts;

/*

Output:

{@ (-19/3 : 0 : 1), (-6 : 0 : 1), (1/2*(-2*i - 1) : 0 : 1), (1/2*(2*i - 1) : 0 :
1), (0 : 1 : 0), (2*i - 4 : -18*i + 4 : 1), (-2*i - 4 : -18*i - 4 : 1), (-2*i - 
    4 : 18*i + 4 : 1), (2*i - 4 : 18*i - 4 : 1) @}

*/

//// Hence every rational point on Y_B6 has t-coordinate -6 or -19/3.


//// The curve Y_A2 has genus 2 and Mordell-Weil rank 1.

YA2 := Y(A2);
_,XA2,map1 := IsHyperelliptic(YA2);
X,map2 := SimplifiedModel(XA2);
X;
JX := Jacobian(X);
RankBounds(JX);

/*

Output:

Hyperelliptic Curve defined by y^2 = 4*x^6 - 20*x^5 + 9*x^4 + 22*x^3 + 127*x^2 + 98*x + 85 over Rational Field

1 1

*/


//// Applying Chabauty-Coleman to find all rational points on Y_A2.

P := JX ! [X![1,-2,0],X![1,2,0]];
Order(P); // 0 indicates infinite order
Xpts := Chabauty(P); // all rational points on X
YA2_pts := BasePoints(map1);
A2map := map1*map2;
for pt in Xpts do
YA2_pts := YA2_pts join Points(Pullback(A2map, pt));
end for;
YA2_pts;

/*

Output:

0

{@ (-6, 16) @}

*/


//// Hence (-6,16) is the only rational point on Y_A2.


//// The curve Y_A4 has genus 2 and Mordell-Weil rank 0.

YA4 := Y(A4);
_,XA4,map1 := IsHyperelliptic(YA4);
X,map2 := SimplifiedModel(XA4);
JX := Jacobian(X);
RankBound(JX);
Chabauty0(JX);
BasePoints(map1);

/*

Output:

0

{@ @}

{@ (-19/3, 0), (-6, 0) @}

*/

//// Hence every rational point on Y_A4 has t-coordinate -6 or -19/3.


//// The curve Y_B7 has genus 2 and Mordell-Weil rank 1.

YB7 := Y(B7);
_,XB7,map1 := IsHyperelliptic(YB7);
X,map2 := SimplifiedModel(XB7);
X;
JX := Jacobian(X);
RankBounds(JX);

/*

Output:

Hyperelliptic Curve defined by y^2 = 4*x^6 - 20*x^5 + 9*x^4 + 22*x^3 + 127*x^2 + 98*x + 85 over Rational Field

1 1

*/


//// Applying Chabauty-Coleman to find all rational points on Y_B7.

P := JX ! [X![1,-2,0],X![1,2,0]];
Order(P);
Xpts := Chabauty(P);
YB7_pts := BasePoints(map1);
B7map := map1*map2;
for pt in Xpts do
YB7_pts := YB7_pts join Points(Pullback(B7map, pt));
end for;
YB7_pts;

/*

Output:

0

{@ (-6, 16) @}

*/

//// Hence (-6,16) is the only rational point on Y_B7.


//// The curve Y_K has genus 2 and Mordell-Weil rank 1.

YK := Y(K);
time _,XK,map1 := IsHyperelliptic(YK); // long computation
X,map2 := SimplifiedModel(XK);
X;
JX := Jacobian(X);
RankBounds(JX);

/*

Output:

Time: 345.390

Hyperelliptic Curve defined by y^2 = x^6 - 8*x^4 + 6*x^3 - 8*x^2 + 1 over 
Rational Field

1 1

*/


//// Applying Chabauty-Coleman to find all rational points on Y_K.

P := JX ! [X![1,1,0],X![1,-1,0]];
Order(P);
Xpts := Chabauty(P);
YK_pts := BasePoints(map1);
Kmap := map1*map2;
for pt in Xpts do
YK_pts := YK_pts join Points(Pullback(Kmap,pt));
end for;
YK_pts;

/*

Output:

0

{@ (-6, 8), (-10/3, 8/3), (-10/3, 22/3) @}

*/


//// Hence every rational point on Y_K has t-coordinate -6 or -10/3.


//// The curve Y_B3 is birational to a genus-2 curve with no rational point.

YB3 := Y(B3);
_,XB3,map := IsHyperelliptic(YB3);
X := SimplifiedModel(XB3);
X;
_<x> := PolynomialRing(Rationals());
HasPointsEverywhereLocally(-3*x^6 + 14*x^5 - x^4 - 22*x^3 - 103*x^2 - 92*x - 68,2);
BasePoints(map);

/*

Output:

Hyperelliptic Curve defined by y^2 = -3*x^6 + 14*x^5 - x^4 - 22*x^3 - 103*x^2 - 92*x - 68 over Rational Field

false

{@ (-19/3, 0), (-6, 0) @}

*/


//// Hence every rational point on Y_B3 has t-coordinate -19/3 or -6.


//// The curve Y_B4 is birational to a hyperelliptic genus-3 curve with no rational point.

YB4 := Y(B4);
_,XB4,map := IsHyperelliptic(YB4);
X := SimplifiedModel(XB4);
X;
_<x> := PolynomialRing(Rationals());
HasPointsEverywhereLocally(-12*x^8 + 44*x^7 + 37*x^6 - 22*x^5 - 505*x^4 - 890*x^3 - 1155*x^2 - 732*x - 340,2);
BasePoints(map);

/*

Output:

Hyperelliptic Curve defined by y^2 = -12*x^8 + 44*x^7 + 37*x^6 - 22*x^5 - 505*x^4 - 890*x^3 - 1155*x^2 - 732*x - 340 over Rational Field

false

{@ (-19/3, 0), (-6, 0) @}

*/

//// Hence every rational point on Y_B4 has t-coordinate -19/3 or -6.



//// The curve Y_A3 maps to a hyperelliptic curve of genus 1 with no rational point.

//// The polynomial a_3 is quadratic in x^2, equal to f(t,x^2) with f as below.

k<t> := PolynomialRing(Rationals());
_<x> := PolynomialRing(k);

f := x^2 + (54*t^6 + 1728*t^5 + 22996*t^4 + 163488*t^3 + 658172*t^2 + 1431888*t + 
    1325232)*x + 729*t^12 + 46656*t^11 + 1367820*t^10 + 24302160*t^9 + 
    291613300*t^8 + 2491510624*t^7 + 15554745824*t^6 + 71564872832*t^5 + 
    241077431104*t^4 + 580573833216*t^3 + 950034852864*t^2 + 949848367104*t + 
    439537176576;

Discriminant(f) eq -16*(6 + t)^4*(19 + 3*t)^2*(51 + 22*t + 3*t^2)*(5 + 4*t + 4*t^2);

HasPointsEverywhereLocally(-(51 + 22*t + 3*t^2)*(5 + 4*t + 4*t^2),2);

/*

Output:

true

false

*/


//// Hence every rational point on Y_A3 has t-coordinate -6 or -19/3.


//// *** This completes the calculations for Lemma 4.4. *** ////



//// *** Proof of Lemma 4.5. *** ////

PointsKnown := RuledOut join {K};

/*
The following function determines if the subgroup H of G is
contained in a G-conjugate of one of the PointsKnown groups.
*/

IsInPointsKnownGroup := function(H)
return true in {Gsubs ! H le Gsubs ! gp : gp in PointsKnown};
end function;

// Check if H is conjugate to a Realized group.
IsRealized := function(H)
return true in {IsConjugate(G,H,gp): gp in Realized};
end function;


//// Groups whose realizability as G_{4,r} is unknown.

UnknownGroups := {};

for i in Gsubs do
H := Group(i);
if not IsRealized(H) and not IsInPointsKnownGroup(H) then
Include(~UnknownGroups,H);
end if;
end for;

#UnknownGroups eq 17;



//// *** Proof of Proposition 4.6. *** ////


_<x> := PolynomialRing(Rationals());

for r in [-19/3,-5,-10/3,-1,-1/2] do
Phi4r := x^12 + (-3*r + 6)*x^11 + (4*r^2 - 16*r + 24)*x^10 + (-3*r^3 + 20*r^2 - 55*r +
    62)*x^9 + (r^4 - 21*r^3 + 19*r^2 - 222*r + 72)*x^8 + (11*r^4 - 35*r^3 -
    14*r^2 - 660*r + 72)*x^7 + (54*r^4 + 142*r^3 + 413*r^2 - 684*r + 852)*x^6 +
    (153*r^4 + 825*r^3 + 2422*r^2 + 1596*r + 3672)*x^5 + (272*r^4 + 1881*r^3 +
    5854*r^2 + 6300*r + 7560)*x^4 + (309*r^4 + 2409*r^3 + 7754*r^2 + 9228*r +
    8744)*x^3 + (218*r^4 + 1806*r^3 + 5884*r^2 + 7080*r + 5808)*x^2 + (87*r^4 +
    740*r^3 + 2400*r^2 + 2800*r + 2064)*x + 15*r^4 + 128*r^3 + 408*r^2 + 448*r +
    304;
G4r := GaloisGroup(Phi4r);

for H in {M1,M2,C1,K} do
if IsConjugate(Sym(12),G4r,H) then
r, H;
end if;
end for;
end for;

/*

Output:

-19/3 Permutation group M2

-5 Permutation group M2

-10/3 Permutation group K

-1 Permutation group C1

-1/2 Permutation group M1

*/



//// *** Proof of Proposition 5.1(b). *** ////

possible_groups := Realized join UnknownGroups;

//// Computing indices of stabilizers.

degrees := {};
for H in possible_groups do
degrees := degrees join {Index(H,Stabilizer(H,i)) : i in [1..12]};
end for;
degrees;

/*

Output:

{ 2, 4, 6, 8, 12 }

*/


//// *** Proof of Proposition 5.3(b). *** ////

/*
Given the Galois group of a polynomial F with rational coefficients,
this function computes the density of the set of primes p such that 
F has a root in the p-adic field Q_p.
*/

Density := function(GG);
stabilizer_union := {};
for i := 1 to #GSet(GG) do
stabilizer_union := stabilizer_union join ElementSet(GG, Stabilizer(GG, i));
end for;
return #stabilizer_union/#GG;
end function;

possible_densities := {Density(GG): GG in possible_groups};

possible_densities;
#possible_densities;
Maximum(possible_densities);

/*

Output:

{ 1/6, 19/96, 85/384, 43/192, 1/4, 5/16, 1/3, 11/32, 25/64, 19/48, 13/32, 
53/128, 1/2, 17/32, 39/64, 5/8 }

16

5/8

*/

//// Densities for the groups known to be realized.

realizable_densities := {Density(GG): GG in Realized};
#realizable_densities;
Maximum(realizable_densities);

/*

Output:

{ 1/6, 19/96, 85/384, 43/192, 11/32, 25/64, 19/48, 53/128, 17/32, 39/64 }

10

39/64

*/
