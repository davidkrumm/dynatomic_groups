
/* 
This file contains the code used for the calculations related to
the third dynatomic groups of maps with trivial automorphism group.
In particular, this includes code for Lemma 3.2, Proposition 5.1(a),
and Proposition 5.3(a).
*/


//// Computing the Galois group of Phi_3 and its lattice of subgroups.

F<t> := PolynomialRing(Rationals());
_<x> := PolynomialRing(F);

Phi3 := x^6 - 2*t*x^5 + (t^2 + 3*t)*x^4 + (-3*t^2 - t)*x^3 + 4*t^2*x^2 - 3*t^2*x + t^2;

assert Discriminant(Phi3) eq -27*t^10*(t^2 - 9*t + 27)^2;

G,_,S := GaloisGroup(Phi3);

Gsubs := SubgroupLattice(G); // The poset of conjugacy classes of subgroups of G


//// Checking that G is isomorphic to the appropriate wreath product.

S6 := Sym(6);
pi := S6 ! [{@ 1,2,3 @}, {@ 4,5,6 @}];
W := Centralizer(S6, pi);
assert W eq WreathProduct(CyclicGroup(3),Sym(2));
assert IsConjugate(S6,G,W);


//// There are three maximal subgroups of G up to conjugacy.

Gmax := MaximalSubgroups(Gsubs ! G);
assert #Gmax eq 3;


//// Labeling the maximal subgroups of G.

sigma := S6 ! [{@ 1,2,3 @},{@ 4,6,5 @}];

for i in Gmax do
m := Group(i);
if IsConjugate(G,m,sub<S6|[S6![{@ 1,2,3 @}],pi]>) then
A := m;
elif IsConjugate(G,m,sub<S6|[S6![{@ 1,5,2,6,3,4 @}],pi]>) then
B := m;
elif IsConjugate(G,m,sub<S6|[S6![{@ 1,6 @},{@ 2,4 @},{@ 3,5 @}],sigma]>) then
C := m;
end if;
end for;


//// There are two maximal subgroups of C up to conjugacy in G.

Cmax := MaximalSubgroups(Gsubs ! C);
assert #Cmax eq 2;


//// Labeling the maximal subgroups of C.

for i in Cmax do
m := Group(i);
if IsConjugate(G,m,sub<S6|S6![{@ 1,6 @},{@ 2,4 @},{@ 3,5 @}]>) then
H := m;
elif IsConjugate(G,m,sub<S6|sigma>) then
J := m;
end if;
end for;


//// Checking that H is contained in a G-conjugate of B,
//// and J is contained in a conjugate of A.

assert Gsubs ! H le Gsubs ! B;
assert Gsubs ! J le Gsubs ! A;


//// Computing defining polynomials of fixed fields.

qA,_ := GaloisSubgroup(S, A);
qB,_ := GaloisSubgroup(S, B);
qC,_ := GaloisSubgroup(S, C);
qH,_ := GaloisSubgroup(S, H);
qJ,_ := GaloisSubgroup(S, J);

/*

For printing the above polynomials:

R := CoefficientRing(qA);
AssignNames(~R,["t"]);
R := Parent(qA);
AssignNames(~R,["x"]);
qA;
qB;
qC;
qH;
qJ;

*/

//// Computing rational roots of discriminants.

Roots(Discriminant(Phi3));
Roots(Discriminant(qA));
Roots(Discriminant(qB));
Roots(Discriminant(qC));
Roots(Discriminant(qH));
Roots(Discriminant(qJ));

/*

Output:

[ <0, 10> ]
[ <0, 2> ]
[ <0, 4>, <3, 2> ]
[ <0, 6> ]
[ <0, 24> ]
[ <0, 42> ]

*/


//// *** What follows is the proof of Lemma 3.2 in the paper. *** ////


//// Finding all rational points on the curve Y_A.
//// The polynomial q_A is quadratic in x, so set y^2 = disc(qA).

assert Discriminant(qA) eq -12*t^2;


//// Hence every rational point on Y_A has t-coordinate 0.


//// The curve Y_B is elliptic of rank 0.

AA<t,x> := AffineSpace(Rationals(),2);
f := x^3 + (8*t^2 - 18*t)*x^2 + (20*t^4 - 84*t^3 + 72*t^2)*x + 16*t^6 - 96*t^5 + 
    168*t^4 - 144*t^3 + 216*t^2;
YB := Curve(AA, f);
XB := ProjectiveClosure(YB);
E, Bmap := EllipticCurve(XB, XB ! [3,-18,1]);
assert Rank(E) eq 0;
assert CremonaReference(E) eq "27a1";


//// Pulling back rational points on E to X_B.

XB_points := BasePoints(Bmap); // Rational points where the map XB --> E is undefined
T, Tmap := TorsionSubgroup(E);
Epts := [Tmap(y): y in T]; // All the rational points on E.
for pt in Epts do
XB_points := XB_points join Points(Pullback(Bmap, pt));
end for;
XB_points;

/*

Output:

{@ (0 : 0 : 1), (3 : 0 : 1), (0 : 1 : 0), (3 : -18 : 1) @}

*/


//// Hence every rational point on Y_B has t-coordinate 0 or 3.


////  Parametrizing the curve Y_C.

AA<t,x> := AffineSpace(Rationals(),2);
f := x^3 + (8*t^2 - 18*t)*x^2 + (20*t^4 - 84*t^3 + 72*t^2)*x + 16*t^6 - 96*t^5 + 
    160*t^4 - 72*t^3;
YC := Curve(AA, f);
XC := ProjectiveClosure(YC);
P1<v,w> := Curve(ProjectiveSpace(Rationals(),1));
Cmap := Parametrization(XC, XC ! [9/2,-27,1], P1);
Cmap := ImproveParametrization(Cmap);
DefiningPolynomials(Cmap); // Components of the map P1 --> XC

/*

Output:

[
    v^5*w + 2*v^4*w^2 - 9*v^3*w^3 + 7*v^2*w^4 - v*w^5,
    -2*v^6 - 8*v^5*w + 16*v^4*w^2 + 38*v^3*w^3 - 68*v^2*w^4 + 22*v*w^5 - 2*w^6,
    v^4*w^2 - 2*v^3*w^3 + v^2*w^4
]

*/


//// Dehomogenizing, we obtain a parametrization of Y_C.

A1<v> := AffineSpace(Rationals(),1);
eta := (v^3 + 3*v^2 - 6*v + 1)/(v*(v - 1));
lambda := -2*(1 - 5*v + v^2 + v^3)*(1 - 6*v + 3*v^2 + v^3)/(v*(v - 1))^2;
Cmap := map<A1->YC | [eta,lambda]>;


//// Checking that the map A1 --> Y_C is invertible,
//// and finding rational points where the inverse is undefined.

bool, Cmap_inverse := IsInvertible(Cmap);
assert bool;
BasePoints(Cmap_inverse);

/*

Output:

{@ (0, 0) @}

*/


//// Hence every rational point on Y_C different from (0,0)
//// is in the image of the parametrization A1 --> Y_C.


//// *** Proof of Proposition 5.1(a) in the paper. *** ////

_<x> := PolynomialRing(Rationals());
v := 3;
Phi3v := x^6 - 2*v*x^5 + (v^2 + 3*v)*x^4 + (-3*v^2 - v)*x^3 + 4*v^2*x^2 - 3*v^2*x + v^2;
G3v := GaloisGroup(Phi3v);

possible_groups := {W,C,G3v};

{IsTransitive(H): H in possible_groups};

/*

Output:

{ true }

*/


//// *** Proof of Proposition 5.3(a) *** ////

/*
Given the Galois group of a polynomial F with rational coefficients,
this function computes the density of the set of primes p such that 
F has a root in the p-adic field Q_p.
*/

Density := function(GG);
stabilizer_union := {};
for i := 1 to #GSet(GG) do
stabilizer_union := stabilizer_union join ElementSet(GG, Stabilizer(GG, i));
end for;
return #stabilizer_union/#GG;
end function;

{Density(GG): GG in possible_groups};


/*

Output:

{ 1/6, 5/18 }

*/
